<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Console.EnvironmentVariables</name>
    </assembly>
    <members>
        <member name="T:Console.EnvironmentVariables.DefaultVariables">
            <summary>
            VariableContainer Implementation that has no func name and provides default environment variables.
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.DefaultVariables.Instance">
            <summary>
            Singleton Instance
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.DefaultVariables.#cctor">
            <summary>
            Static Constructor
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.DefaultVariables.#ctor">
            <summary>
            Private Constructor.
            </summary>
        </member>
        <member name="T:Console.EnvironmentVariables.DelegateVariableProvider">
            <summary>
            Delegate Implementation of the Variable Provider.
            Allows Creation of Variable Providers without adding more classes.
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.DelegateVariableProvider.Provider">
            <summary>
            The Provider Func
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.DelegateVariableProvider.FunctionName">
            <summary>
            The Function Name
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.DelegateVariableProvider.GetValue(System.String)">
            <summary>
            Returns the Value of the Provider
            </summary>
            <param name="parameter">Input Data</param>
            <returns>Value of the Provider</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.DelegateVariableProvider.#ctor(System.String,System.Func{System.String,System.String})">
            <summary>
            Public Constructor
            </summary>
            <param name="functionName">The Function Name that is used in the console: $funcName(data)</param>
            <param name="provider">Provider Func</param>
        </member>
        <member name="T:Console.EnvironmentVariables.EnvInitializer">
            <summary>
            Initializer of the EnvironmentVariables Extension
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.EnvInitializer.Logger">
            <summary>
            Logger for this Extension
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.EnvInitializer.Order">
            <summary>
            The Load Order of the EnvironmentVariable Extensions
            </summary>
        </member>
        <member name="T:Console.EnvironmentVariables.EnvInitializer.EnvExpander">
            <summary>
            AExpander Implementation for the environment variables
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvInitializer.EnvExpander.Expand(System.String)">
            <summary>
            Returns the Expanded String based on the Input String
            </summary>
            <param name="input">Input String</param>
            <returns>Expanded String</returns>
        </member>
        <member name="P:Console.EnvironmentVariables.EnvInitializer.EnvVersion">
            <summary>
            Version of the Environment Variables Extension
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvInitializer.Initialize">
            <summary>
            Initialization Function
            </summary>
        </member>
        <member name="T:Console.EnvironmentVariables.EnvironmentVariableAutoFillProvider">
            <summary>
            Implements the Auto Fill for Environment Variable Providers
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableAutoFillProvider.CanFill(Console.Core.CommandSystem.Commands.AbstractCommand,System.Int32)">
            <summary>
            Determines if the Provider can Provide Useful AutoFill Suggestions
            </summary>
            <param name="cmd">Command</param>
            <param name="paramNum">Command Parameter Index</param>
            <returns>True if it can AutoFill</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableAutoFillProvider.GetAutoFills(Console.Core.CommandSystem.Commands.AbstractCommand,System.Int32,System.String)">
            <summary>
            Returns the Auto Fill Entries that are useful in the current Context.
            </summary>
            <param name="cmd">The Command</param>
            <param name="paramNum">The Command Parameter Index</param>
            <param name="start">The Start of the Parameter("search term")</param>
            <returns>List of Viable AutoFill Entries</returns>
        </member>
        <member name="T:Console.EnvironmentVariables.EnvironmentVariableManager">
            <summary>
            Static EnvironmentVariable API
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.EnvironmentVariableManager.ActivationPrefix">
            <summary>
            The Character that is used to Activate the environment variable expander
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.EnvironmentVariableManager.OpenBracket">
            <summary>
            Character used to Start the Content section of the Environment Expander
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.EnvironmentVariableManager.CloseBracket">
            <summary>
            Character used to End the Content section of the Environment Expander
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.EnvironmentVariableManager.Providers">
            <summary>
            All Providers
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.GetEnvironmentList">
            <summary>
            Returns all Environment Providers
            </summary>
            <returns>; Seperated List of Providers</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.AddStringTransformMethods(System.String,System.String)">
            <summary>
            Adds all Static Methods of a Type that have one string input and string return as VariableProviders.
            </summary>
            <param name="funcPrefix">The Desired prefix</param>
            <param name="qualifiedType">The Qualified Assembly Name of the Type</param>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.AddStringTransformMethods(System.String,System.Type)">
            <summary>
            Adds all Static Methods of a Type that have one string input and string return as VariableProviders.
            </summary>
            <param name="funcPrefix">The Desired prefix</param>
            <param name="type">The Type</param>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.ValidType(System.Type)">
            <summary>
            Returns True if the Type is a string or a Primitive
            </summary>
            <param name="t">Type to Check</param>
            <returns>True if the Type is valid as VariableProvider return/input</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.GetProvider(System.String,System.Reflection.MethodInfo)">
            <summary>
            Returns the Variable provider from a MethodInfo Class
            </summary>
            <param name="funcPrefix">Desired FuncName</param>
            <param name="info">The Method that will provide the values.</param>
            <returns></returns>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.Expand(System.String)">
            <summary>
            Expands the Input String with the VariableProvider Implementations
            </summary>
            <param name="cmd">Input String</param>
            <returns>Expanded Output String</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.AddProvider(Console.EnvironmentVariables.VariableProvider)">
            <summary>
            Adds a Provider to the EnvironmentVariable Manager.
            </summary>
            <param name="provider">Provider to Add</param>
        </member>
        <member name="M:Console.EnvironmentVariables.EnvironmentVariableManager.RemoveProvider(System.String)">
            <summary>
            Removes a Provider from the EnvironmentVariable Manager.
            </summary>
            <param name="funcName">Name of the Provider to Remove</param>
        </member>
        <member name="T:Console.EnvironmentVariables.RangeVariableProvider">
            <summary>
            Creates a ; Seperated List of numbers in a specfied range
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.RangeVariableProvider.FunctionName">
            <summary>
            The Function Name
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.RangeVariableProvider.GetValue(System.String)">
            <summary>
            Parameter Layouts:
                end
                start;end
                start;end;step
            If Step is not specified the step will be 1
            </summary>
            <param name="parameter">Input Parameter</param>
            <returns>; Seperated List of Numbers</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.RangeVariableProvider.CreateRange(System.Double,System.Double,System.Double)">
            <summary>
            Creates the Range String
            </summary>
            <param name="start">Start Number</param>
            <param name="end">End Number</param>
            <param name="step">Amount of change each step.</param>
            <returns>; Seperated List of Numbers</returns>
        </member>
        <member name="T:Console.EnvironmentVariables.VariableContainer">
            <summary>
            Variable Container Implementation.
            Allows for Grouping Environment Variables
            </summary>
        </member>
        <member name="F:Console.EnvironmentVariables.VariableContainer.Providers">
            <summary>
            Contained Providers
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.VariableContainer.EnvList">
            <summary>
            ; Seperated list of contained VariableProviders.
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.VariableContainer.FunctionName">
            <summary>
            Name of the Container Function
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.VariableContainer.GetValue(System.String)">
            <summary>
            Returns the Value of the Provider
            </summary>
            <param name="parameter">Input Data</param>
            <returns>Value of the Provider</returns>
        </member>
        <member name="M:Console.EnvironmentVariables.VariableContainer.AddProvider(Console.EnvironmentVariables.VariableProvider)">
            <summary>
            Adds a Provider to the EnvironmentVariable Manager.
            </summary>
            <param name="provider">Provider to Add</param>
        </member>
        <member name="M:Console.EnvironmentVariables.VariableContainer.RemoveProvider(System.String)">
            <summary>
            Removes a Provider from the EnvironmentVariable Manager.
            </summary>
            <param name="providerName">Name of the Provider to Remove</param>
        </member>
        <member name="M:Console.EnvironmentVariables.VariableContainer.#ctor(System.String)">
            <summary>
            Public Constructor.
            </summary>
            <param name="funcName">Name of the Variable Container.</param>
        </member>
        <member name="T:Console.EnvironmentVariables.VariableProvider">
            <summary>
            Abstract Variable Provider.
            Can be Inherited to create a VariableProvider for the EnvironmentVariable System.
            </summary>
        </member>
        <member name="P:Console.EnvironmentVariables.VariableProvider.FunctionName">
            <summary>
            The Function Name
            </summary>
        </member>
        <member name="M:Console.EnvironmentVariables.VariableProvider.GetValue(System.String)">
            <summary>
            Returns the Value of the Provider
            </summary>
            <param name="parameter">Input Data</param>
            <returns>Value of the Provider</returns>
        </member>
    </members>
</doc>
